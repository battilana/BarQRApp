/** 
* 杭州数云信息技术有限公司  
* JS-SDK  
* VERSION: 0.0.13 
*/ 
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global = global || self, global.cloud = factory());
}(this, (function () { 'use strict';

  var name = "cloud-sdk";
  var version = "0.0.13";
  var copyright = "copyright © 数云";
  var license = "MIT";

  var enumObj = {
      // 微信小程序
      WE_APP: 'WE_APP',
      // 微信公众号
      WE_MP: 'WE_MP',
      // 淘宝App环境
      TB: 'TB',
      // 天猫App环境
      TM: 'TM',
      ANDROID: 'ANDROID',
      IOS: 'IOS'
  };

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function defaultSdk() {
      var _appInfo;

      var appInfo = (_appInfo = {}, _defineProperty(_appInfo, enumObj.TB, false), _defineProperty(_appInfo, enumObj.TM, false), _defineProperty(_appInfo, enumObj.WE_APP, false), _defineProperty(_appInfo, enumObj.WE_MP, false), _defineProperty(_appInfo, 'platform', ''), _appInfo);

      if (navigator) {
          var ua = navigator.userAgent.toLowerCase();
          if (ua.toLowerCase().indexOf('micromessenger') !== -1) {
              appInfo.WE_MP = true;
          }
          if (ua.toLowerCase().indexOf('@taobao') !== -1) {
              appInfo.TB = true;
          }
          if (ua.toLowerCase().indexOf('@tmall') !== -1) {
              appInfo.TM = true;
          }

          if (ua.indexOf('iphone') > -1) {
              appInfo.platform = enumObj.IOS;
          } else if (ua.indexOf('android') > -1) {
              appInfo.platform = enumObj.ANDROID;
          }
      } else {
          if (wx) {
              var info = wx.getSystemInfoSync();
              appInfo.WE_APP = true;
              appInfo.platform = info.platform.toUpperCase();
          }
          if (my) {
              var _info = my.getSystemInfoSync();
              if (_info.app === 'taobao') {
                  appInfo.TB = true;
              }
              if (_info.app === 'TM') {
                  appInfo.TM = true;
              }
              appInfo.platform = _info.platform.toUpperCase();
          }
      }
      return appInfo;
  }

  var sdk = defaultSdk();

  // 是否是淘宝/天猫环境
  function isAliApp() {
      return sdk.TB || sdk.TM;
  }
  // 是否是手机淘宝
  function isTB() {
      return sdk.TB;
  }
  // 是否是手机天猫
  function isTM() {
      return sdk.TM;
  }
  // 是否微信公众号
  function isWeMp() {
      return sdk.WE_MP;
  }
  // 是否微信小程序
  function isWeApp() {
      return sdk.WE_APP;
  }

  function platform() {
      return sdk.platform;
  }

  function network(callback) {
      if (my) {
          my.getNetworkType({
              success: function success(res) {
                  callback && callback(res);
              }
          });
      }
      if (!navigator && wx) {
          wx.getNetworkType({
              success: function success(res) {
                  callback && callback(res);
              }
          });
      }
  }

  /**
   * 显示指定商品 SKU 选择器
   * @id 商品ID
   * @callback 调用api成功时的回调
   */
  function showSku(id, callback) {
      if (my) {
          my.tb.showSku({
              itemId: id.toString(),
              success: function success(res) {
                  // 这里把用户选中数据返回给业务方处理，添加到小购物车。和天猫超市类似，选中宝贝也会同步在手淘购物车展示
                  callback && callback(res);
              }
          });
      }
  }

  /**
   * 隐藏正在展示的商品 SKU 选择器
   * @id 商品ID
   * @callback 调用api成功或失败时的回调
   */
  function hideSku(id, callback) {
      if (my) {
          my.tb.hideSku({
              itemId: id.toString(),
              success: function success(res) {
                  callback && callback('success', res);
              },
              fail: function fail(res) {
                  callback && callback('fail', res);
              }
          });
      }
  }

  /**
   * 收藏商品
   * @id 商品ID
   * @callback 调用api成功或失败时的回调
   */
  function collectGoods(id, callback) {
      if (my) {
          my.tb.collectGoods({
              id: Number(id),
              success: function success(res) {
                  callback && callback('success', res);
              },
              fail: function fail(res) {
                  callback && callback('fail', res);
              }
          });
      }
  }

  /**
   * 取消收藏商品
   * @id 商品ID
   * @callback 调用api成功或失败时的回调
   */
  function unCollectGoods(id, callback) {
      if (my) {
          my.tb.unCollectGoods({
              id: Number(id),
              success: function success(res) {
                  callback && callback('success', res);
              },
              fail: function fail(res) {
                  callback && callback('fail', res);
              }
          });
      }
  }

  /**
   * 打开商品详情页
   * @id 商品ID
   * @forceH5 是否打开H5类型的商品详情面
   * @callback 调用api成功或失败时的回调
   */
  function openDetail(id) {
      var forceH5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var callback = arguments[2];

      if (my) {
          my.tb.openDetail({
              id: id.toString(),
              forceH5: forceH5,
              success: function success(res) {
                  callback && callback('success', res);
              },
              fail: function fail(res) {
                  callback && callback('fail', res);
              }
          });
      }
  }

  /**
   * 检查商品是否被收藏
   * @id 商品ID
   * @callback 调用api成功或失败时的回调
   */
  function checkGoodsCollectedStatus(id, callback) {
      if (my) {
          my.tb.checkGoodsCollectedStatus({
              id: Number(id),
              success: function success(res) {
                  callback && callback('success', res);
              },
              fail: function fail(res) {
                  callback && callback('fail', res);
              }
          });
      }
  }

  /**
   * 关注店铺
   * @id 店铺归属的卖家Id
   * @callback 调用api成功或失败时的回调
   */
  function favorShop(id, callback) {
      if (my) {
          my.tb.favorShop({
              id: Number(id),
              success: function success(res) {
                  callback && callback('success', res);
              },
              fail: function fail(ex) {
                  callback && callback('fail', ex);
              }
          });
      }
  }

  /**
   * 取消关注店铺
   * @id 店铺归属的卖家Id
   * @callback 调用api成功或失败时的回调
   */
  function unFavorShop(id, callback) {
      if (my) {
          my.tb.unFavorShop({
              id: Number(id),
              success: function success(res) {
                  callback && callback('success', res);
              },
              fail: function fail(ex) {
                  callback && callback('fail', ex);
              }
          });
      }
  }

  /**
   * 查询店铺关注状态
   * @id 店铺归属的卖家Id
   * @callback 调用api成功或失败时的回调
   */
  function checkShopFavoredStatus(id, callback) {
      if (my) {
          my.tb.checkShopFavoredStatus({
              id: Number(id),
              success: function success(res) {
                  callback && callback('success', res);
              },
              fail: function fail(ex) {
                  callback && callback('fail', ex);
              }
          });
      }
  }

  /**
   * 打开BC客服聊天
   * @sellerNick 卖家昵称
   * @callback 调用api成功或失败时的回调
   */
  function openMessage(sellerNick, callback) {
      if (my) {
          my.tb.openMessage({
              sellerNick: sellerNick,
              success: function success(res) {
                  callback && callback('success', res);
              },
              fail: function fail(ex) {
                  callback && callback('fail', ex);
              }
          });
      }
  }

  var cloud = {
      name: name,
      version: version,
      copyright: copyright,
      license: license,
      app: {
          platform: platform(),
          isAliApp: isAliApp(),
          isTB: isTB(),
          isTM: isTM(),
          isWeApp: isWeApp(),
          isWeMp: isWeMp(),
          tb: {
              showSku: showSku,
              hideSku: hideSku,
              collectGoods: collectGoods,
              unCollectGoods: unCollectGoods,
              openDetail: openDetail,
              checkGoodsCollectedStatus: checkGoodsCollectedStatus,
              favorShop: favorShop,
              unFavorShop: unFavorShop,
              checkShopFavoredStatus: checkShopFavoredStatus,
              openMessage: openMessage
          }
      },
      network: network
  };

  if (window) {
      window['cloud'] = cloud;
  }

  return cloud;

})));
